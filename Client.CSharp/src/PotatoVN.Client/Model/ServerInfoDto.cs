/*
 * PotatoVN.Server
 *
 * PotatoVN 同步服务器 最新更新：支持staff同步
 *
 * The version of the OpenAPI document: v1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = PotatoVN.Client.Client.FileParameter;
using OpenAPIDateConverter = PotatoVN.Client.Client.OpenAPIDateConverter;

namespace PotatoVN.Client.Model
{
    /// <summary>
    /// ServerInfoDto
    /// </summary>
    [DataContract(Name = "ServerInfoDto")]
    public partial class ServerInfoDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServerInfoDto" /> class.
        /// </summary>
        /// <param name="bangumiOAuth2Enable">bangumiOAuth2Enable.</param>
        /// <param name="defaultLoginEnable">defaultLoginEnable.</param>
        /// <param name="bangumiLoginEnable">bangumiLoginEnable.</param>
        /// <param name="galgameStaffAvailable">是否支持同步GalgameStaff.</param>
        /// <param name="staffEnable">是否支持同步Staff.</param>
        public ServerInfoDto(bool bangumiOAuth2Enable = default(bool), bool defaultLoginEnable = default(bool), bool bangumiLoginEnable = default(bool), bool galgameStaffAvailable = default(bool), bool staffEnable = default(bool))
        {
            this.BangumiOAuth2Enable = bangumiOAuth2Enable;
            this.DefaultLoginEnable = defaultLoginEnable;
            this.BangumiLoginEnable = bangumiLoginEnable;
            this.GalgameStaffAvailable = galgameStaffAvailable;
            this.StaffEnable = staffEnable;
        }

        /// <summary>
        /// Gets or Sets BangumiOAuth2Enable
        /// </summary>
        [DataMember(Name = "bangumiOAuth2Enable", EmitDefaultValue = true)]
        public bool BangumiOAuth2Enable { get; set; }

        /// <summary>
        /// Gets or Sets DefaultLoginEnable
        /// </summary>
        [DataMember(Name = "defaultLoginEnable", EmitDefaultValue = true)]
        public bool DefaultLoginEnable { get; set; }

        /// <summary>
        /// Gets or Sets BangumiLoginEnable
        /// </summary>
        [DataMember(Name = "bangumiLoginEnable", EmitDefaultValue = true)]
        public bool BangumiLoginEnable { get; set; }

        /// <summary>
        /// 是否支持同步GalgameStaff
        /// </summary>
        /// <value>是否支持同步GalgameStaff</value>
        [DataMember(Name = "galgameStaffAvailable", EmitDefaultValue = true)]
        public bool GalgameStaffAvailable { get; set; }

        /// <summary>
        /// 是否支持同步Staff
        /// </summary>
        /// <value>是否支持同步Staff</value>
        [DataMember(Name = "staffEnable", EmitDefaultValue = true)]
        public bool StaffEnable { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServerInfoDto {\n");
            sb.Append("  BangumiOAuth2Enable: ").Append(BangumiOAuth2Enable).Append("\n");
            sb.Append("  DefaultLoginEnable: ").Append(DefaultLoginEnable).Append("\n");
            sb.Append("  BangumiLoginEnable: ").Append(BangumiLoginEnable).Append("\n");
            sb.Append("  GalgameStaffAvailable: ").Append(GalgameStaffAvailable).Append("\n");
            sb.Append("  StaffEnable: ").Append(StaffEnable).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
