/*
 * PotatoVN.Server
 *
 * PotatoVN 同步服务器 最新更新：galgame新增playcount字段
 *
 * The version of the OpenAPI document: v1.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = PotatoVN.Client.Client.FileParameter;
using OpenAPIDateConverter = PotatoVN.Client.Client.OpenAPIDateConverter;

namespace PotatoVN.Client.Model
{
    /// <summary>
    /// UserDto
    /// </summary>
    [DataContract(Name = "UserDto")]
    public partial class UserDto : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public UserType? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserDto" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="userName">userName.</param>
        /// <param name="userDisplayName">userDisplayName.</param>
        /// <param name="type">type.</param>
        /// <param name="bangumiId">用户所属的BangumiId，若为0则表示未绑定.</param>
        /// <param name="avatar">用户头像URL，可能为null.</param>
        /// <param name="usedSpace">usedSpace.</param>
        /// <param name="totalSpace">totalSpace.</param>
        /// <param name="lastGalChangedTimeStamp">lastGalChangedTimeStamp.</param>
        /// <param name="lastStaffChangedTimeStamp">lastStaffChangedTimeStamp.</param>
        public UserDto(int id = default, string userName = default, string userDisplayName = default, UserType? type = default, int bangumiId = default, string avatar = default, long usedSpace = default, long totalSpace = default, long lastGalChangedTimeStamp = default, long lastStaffChangedTimeStamp = default)
        {
            this.Id = id;
            this.UserName = userName;
            this.UserDisplayName = userDisplayName;
            this.Type = type;
            this.BangumiId = bangumiId;
            this.Avatar = avatar;
            this.UsedSpace = usedSpace;
            this.TotalSpace = totalSpace;
            this.LastGalChangedTimeStamp = lastGalChangedTimeStamp;
            this.LastStaffChangedTimeStamp = lastStaffChangedTimeStamp;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets UserName
        /// </summary>
        [DataMember(Name = "userName", EmitDefaultValue = true)]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or Sets UserDisplayName
        /// </summary>
        [DataMember(Name = "userDisplayName", EmitDefaultValue = true)]
        public string UserDisplayName { get; set; }

        /// <summary>
        /// 用户所属的BangumiId，若为0则表示未绑定
        /// </summary>
        /// <value>用户所属的BangumiId，若为0则表示未绑定</value>
        [DataMember(Name = "bangumiId", EmitDefaultValue = false)]
        public int BangumiId { get; set; }

        /// <summary>
        /// 用户头像URL，可能为null
        /// </summary>
        /// <value>用户头像URL，可能为null</value>
        [DataMember(Name = "avatar", EmitDefaultValue = true)]
        public string Avatar { get; set; }

        /// <summary>
        /// Gets or Sets UsedSpace
        /// </summary>
        [DataMember(Name = "usedSpace", EmitDefaultValue = false)]
        public long UsedSpace { get; set; }

        /// <summary>
        /// Gets or Sets TotalSpace
        /// </summary>
        [DataMember(Name = "totalSpace", EmitDefaultValue = false)]
        public long TotalSpace { get; set; }

        /// <summary>
        /// Gets or Sets LastGalChangedTimeStamp
        /// </summary>
        [DataMember(Name = "lastGalChangedTimeStamp", EmitDefaultValue = false)]
        public long LastGalChangedTimeStamp { get; set; }

        /// <summary>
        /// Gets or Sets LastStaffChangedTimeStamp
        /// </summary>
        [DataMember(Name = "lastStaffChangedTimeStamp", EmitDefaultValue = false)]
        public long LastStaffChangedTimeStamp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  UserDisplayName: ").Append(UserDisplayName).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  BangumiId: ").Append(BangumiId).Append("\n");
            sb.Append("  Avatar: ").Append(Avatar).Append("\n");
            sb.Append("  UsedSpace: ").Append(UsedSpace).Append("\n");
            sb.Append("  TotalSpace: ").Append(TotalSpace).Append("\n");
            sb.Append("  LastGalChangedTimeStamp: ").Append(LastGalChangedTimeStamp).Append("\n");
            sb.Append("  LastStaffChangedTimeStamp: ").Append(LastStaffChangedTimeStamp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
