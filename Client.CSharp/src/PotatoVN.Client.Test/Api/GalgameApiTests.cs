/*
 * PotatoVN.Server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PotatoVN.Client.Client;
using PotatoVN.Client.Api;
// uncomment below to import models
//using PotatoVN.Client.Model;

namespace PotatoVN.Client.Test.Api
{
    /// <summary>
    ///  Class for testing GalgameApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GalgameApiTests : IDisposable
    {
        private GalgameApi instance;

        public GalgameApiTests()
        {
            instance = new GalgameApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GalgameApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GalgameApi
            //Assert.IsType<GalgameApi>(instance);
        }

        /// <summary>
        /// Test GalgameDelete
        /// </summary>
        [Fact]
        public void GalgameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GalgameDelete();
        }

        /// <summary>
        /// Test GalgameDeletedGet
        /// </summary>
        [Fact]
        public void GalgameDeletedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long timestamp = null;
            //int? pageIndex = null;
            //int? pageSize = null;
            //var response = instance.GalgameDeletedGet(timestamp, pageIndex, pageSize);
            //Assert.IsType<GalgameDeletedDtoPagedResult>(response);
        }

        /// <summary>
        /// Test GalgameGalgameIdDelete
        /// </summary>
        [Fact]
        public void GalgameGalgameIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int galgameId = null;
            //instance.GalgameGalgameIdDelete(galgameId);
        }

        /// <summary>
        /// Test GalgameGalgameIdPlaylogPatch
        /// </summary>
        [Fact]
        public void GalgameGalgameIdPlaylogPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int galgameId = null;
            //PlayLogDto? playLogDto = null;
            //var response = instance.GalgameGalgameIdPlaylogPatch(galgameId, playLogDto);
            //Assert.IsType<GalgameDto>(response);
        }

        /// <summary>
        /// Test GalgameGet
        /// </summary>
        [Fact]
        public void GalgameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long timestamp = null;
            //int? pageIndex = null;
            //int? pageSize = null;
            //var response = instance.GalgameGet(timestamp, pageIndex, pageSize);
            //Assert.IsType<GalgameDtoPagedResult>(response);
        }

        /// <summary>
        /// Test GalgamePatch
        /// </summary>
        [Fact]
        public void GalgamePatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GalgameUpdateDto? galgameUpdateDto = null;
            //var response = instance.GalgamePatch(galgameUpdateDto);
            //Assert.IsType<GalgameDto>(response);
        }
    }
}
