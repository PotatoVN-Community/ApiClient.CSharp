/*
 * PotatoVN.Server
 *
 * PotatoVN 同步服务器 最新更新：支持staff同步
 *
 * The version of the OpenAPI document: v1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PotatoVN.Client.Client;
using PotatoVN.Client.Api;
// uncomment below to import models
//using PotatoVN.Client.Model;

namespace PotatoVN.Client.Test.Api
{
    /// <summary>
    ///  Class for testing StaffApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StaffApiTests : IDisposable
    {
        private StaffApi instance;

        public StaffApiTests()
        {
            instance = new StaffApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StaffApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' StaffApi
            //Assert.IsType<StaffApi>(instance);
        }

        /// <summary>
        /// Test StaffGet
        /// </summary>
        [Fact]
        public void StaffGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long timestamp = null;
            //int? pageIndex = null;
            //int? pageSize = null;
            //bool? includeDeleted = null;
            //var response = instance.StaffGet(timestamp, pageIndex, pageSize, includeDeleted);
            //Assert.IsType<StaffDtoPagedResult>(response);
        }

        /// <summary>
        /// Test StaffPatch
        /// </summary>
        [Fact]
        public void StaffPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //StaffUpdateDto? staffUpdateDto = null;
            //var response = instance.StaffPatch(staffUpdateDto);
            //Assert.IsType<StaffDto>(response);
        }
    }
}
